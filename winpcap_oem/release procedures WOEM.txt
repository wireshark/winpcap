$Header: /usr/cvsroot/winpcap_oem/release\040procedures\040WOEM.txt,v 1.16 2008-08-22 18:45:50 gianlucav Exp $

WINPCAP PRO RELEASE PROCEDURE
=============================

NOTE (GV20070122): the procedure has NOT been tested thoroughly in case
of non-signed builds.

Needed tools
------------

- Visual Studio .NET 2005 SP1 (both x86 and x64 build environments)
- WDK 6001.18002.
- DDKBUILD v. 3.14.37 on the path. The variables WLHBASE and WNETBASE should point
  to the wDK path.
- The cygnus environment on your path (needed to execute step 9).
   In particular you will need to have flex, bison, patch.
- Doxygen 1.5.4 installed and on the path

Dependencies
------------
- you need to have the Airpcap developer's pack in 
	  %BUILD_TREE%\Airpcap_Devpack
- you need to have the NpfIm compiled sources in
	  %BUILD_TREE%\NpfIm
	  You should also have run the "NpfIm\build_dev_pack.bat" script
	  to have the devpacks ready

How to compile WinPcap PRO (NOT for the Toolkit)
------------------------------------------------

1.  Download winpcap (HEAD) and winpcap_oem from the CVS into %BUILD_TREE%

2.  Modify the version info into
	  %BUILD_TREE%\winpcap_oem\version.h. The version is x.y.2.z

3.  Modify the documentation version in the file
	  %BUILD_TREE%\winpcap_oem\dox\prj\winpcap_oem_noc.dox
	  
4.  Modify the device string into
	  %BUILD_TREE%\winpcap\common\wpcapnames.h (first two defines)

5.  Download the libpcap sources (usually 1.0 branch) into 
	  %BUILD_TREE%\libpcap

6.  Commit 

		%BUILD_TREE%\winpcap_oem\version.h
		%BUILD_TREE%\winpcap_oem\dox\prj\winpcap_oem_noc.dox 
	
	into the CVS. These should be the *only* modified filew in this module.

7.  Tag the %BUILD_TREE%\winpcap_oem module with the tag 
	  WINPCAP_PRO_<WinPcap PRO version>_PUBLIC

8.  Tag the %BUILD_TREE%\winpcap module with the tag 
	  WINPCAP_PRO_<WinPcap PRO version>_PUBLIC

9.  Go to %BUILD_TREE%\winpcap and execute
        	integrate_libpcap.bat
    The correct output should be

Copying files...
Copying files -- Done
---------------------------------------
Applying remote code patch...
Applying remote code patch -- Done
---------------------------------------
Applying TurboCap code patch...
Applying TurboCap code patch -- Done
---------------------------------------
DOS'ifing the libpcap makefile...
libpcap.dsp: done.
DOS'ifing the libpcap makefile -- Done
---------------------------------------
Generating the compiler files...
Building the libpcap parser and scanner...
 --- Done!
Generating the compiler files -- Done

10. Check that the version of libpcap in
      %BUILD_TREE%\winpcap\wpcap\libpcap\pcap.c line 1321
      "static const char pcap_version_string[] = "libpcap version 0.9[.x]";"
    makes sense (??? WHAT DOES IT MEAN???)

11. Check that the version of wpcap in  
      %BUILD_TREE%\winpcap\wpcap\libpcap\pcap.c line 1330
        "static const char wpcap_version_string[] = "3.1";"
    is correct. 
    
12. Zip the contents of the 5 folders 
	  %BUILD_TREE%\winpcap_oem
	  %BUILD_TREE%\winpcap
	  %BUILD_TREE%\libpcap_<libpcap_version>
	  %BUILD_TREE%\Airpcap_Devpack
	  %BUILD_TREE%\NpfIm
		  |
		  V
	  %BUILD_TREE%\sources.zip

13. Open the WinNT4 DDK Release build environment. Go into 
      %BUILD_TREE%\winpcap_oem\packetntx. 
    Execute "compileDriver.bat". Close the build 
    environment. 

14. Open %BUILD_TREE%\winpcap_oem\MakeAll.sln with Visual Studio 2005 SP1.

15. Choose the "Release|X64" configuration, and then use Build->Rebuild Solution.
    No warnings should be generated.

16. Choose the "Release|Win32" configuration, and then use Build->Rebuild Solution.
    No warnings should be generated.

17. If you are NOT building a SIGNED build, the build is complete :-)

18. Sign all the binaries in 
		%BUILD_TREE%\winpcap_oem\OEM\WinPcapOem\Binaries, namely
			x86\npfnt.sys
			x86\npf2k.sys
			x86\packetnt.dll
			x86\packet2k.dll
			x86\packetVista.dll
			x64\npfx64.sys
			x64\packet2k.dll
			x64\packetVista.dll
		with the company certificate + cross certificate
		
		The generic command is
		   signtool sign /v /ac MSCV-VSClass3.cer /s my /n "CACE Technologies, Inc."
		   /t http://timestamp.verisign.com/scripts/timestamp.dll <binary_name>
		   
19. Go back to Visual studio 2005. Choose the "Release STEP2|Win32" configuration, and then
     use Build->Rebuild solution. 
     IT IS IMPERATIVE THAT YOU CHOOSE "REBUILD" SO THAT THE SIGNED BINARIES ARE USED.

20. Choose the "Release STEP2|x64" configuration, and then use Build->Rebuild solution. 
     IT IS IMPERATIVE THAT YOU CHOOSE "REBUILD" SO THAT THE SIGNED BINARIES ARE USED.

21. Sign the following binaries 
		%BUILD_TREE%\winpcap_oem\wpcap\PRJ\Release REMOTE\x86\wpcap.dll
		%BUILD_TREE%\winpcap_oem\wpcap\PRJ\Release REMOTE\x64\wpcap.dll
		%BUILD_TREE%\winpcap_oem\OEM\WinpcapOem\Release\x86\packet.dll
		%BUILD_TREE%\winpcap_oem\OEM\WinpcapOem\Release\x64\packet.dll
		with the company certificate + cross certificate

22. The build is complete.

How to create the developer's pack for WinPcap PRO (NOT for the Toolkit)
------------------------------------------------------------------------

1. After the build is complete, in a command prompt go to 
		
		%BUILD_TREE%\winpcap_oem

2. Run "build_wpdpack_oem.bat". The script will perform these
	steps without pauses:
	a. Creation of the include folder (no errors/warnings)
	b. Creation of the lib folder (no errors/warnings)
	c. Creation of the bin folder (no errors/warnings)
	d. Creation of the Examples and Examples-pcap folders (no errors/warnings)
	e. creation of the documentation. One error copying some *.gif files is reported.

How to create the developer's pack for WinPcap PRO (NOT for the Toolkit) with NpfIm loading support (IBM)
---------------------------------------------------------------------------------------------------------

TO BE UPDATED (GV20080818)

1. After the build is completed, in a command prompt go to 
		
		%BUILD_TREE%\winpcap_oem

2. Run "build_wpdpack_oem_with_npfim.bat". The script will perform these
	steps without pauses:
	a. Creation of the include folder (no errors/warnings)
	b. Creation of the lib folder (no errors/warnings)
	c. Creation of the bin folder (no errors/warnings)
	d. Creation of the Examples and Examples-pcap folders (no errors/warnings)
	e. creation of the documentation. One error copying some *.gif files is reported.
   f. copy of the NpfIm files.

SCM procedures
--------------

NpfIm BUILD:
TO BE UPDATED (GV20080818)
1a.  %BUILD_TREE%\winpcap_oem\wpdpack_NpfIm\
		|
		v
	WinPcapPro_<WinPcap Pro version>_WpdPackNpfIm.zip

Vanilla BUILD:
1a.  %BUILD_TREE%\winpcap_oem\wpdpack\
		|
		v
	WinPcapPro_<WinPcap Pro version>_WpdPack.zip


2. 	%BUILD_TREE%\Sources.zip
		|
		V
	WinPcapPro_<WinPcap Pro version>_Sources.zip

3.	%BUILD_TREE%\winpcap_oem
	%BUILD_TREE%\winpcap
	%BUILD_TREE%\libpcap_<libpcap_version>
	%BUILD_TREE%\Airpcap_Devpack
	%BUILD_TREE%\NpfIm
		|
		V
	WinPcapPro_<WinPcap Pro version>_BuildTree.zip
		
		
Checksums
---------

1.  Open a command prompt and go into %BUILD_TREE%

2.  Type md5sum.exe WinPcapPro_* > md5sum.txt

3.  Type sha1sum.exe WinPcapPro_* > sha1sum.txt
